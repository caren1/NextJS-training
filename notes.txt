What's necessary for nextjs?
- JS + React basics
- Creating components
- Using JSX
- Passing props
- Using state

What is NextJS?

Is a React frontend development web framework created by Vercel, that enables functionality as server-side
rendering and static site generation. It builds on top of React giving additional features.
+ Framework for creating pre-rendered React websites
+ Offers us both Server Side Rendering and Static site Generation
SSR -> When React components are getting rendered into HTML of the webpage after the request comes to the browser
SSG -> When React components are getting rendered into HTML of the webpage at the build time 

Server Side Rendering 
Unlike a traditional React app where the entire application is loaded and renderted on the client, NextJS
allows the first page to load to be rendered by server, which is great for SEO and performance.

Other benefits:
- Better SEO
- Pre-rendering improves performance
- Easy page routing
- Api Routes
- Out of the box TypeScript and Sass
- Static site generation (next export)
- Easy deployment


///////////////////////////////////////

- lower case for pages, uppercase for components
- possibility of adding styles in JS
    -> <style jsx>{`.title{color: ${x>3 ? 'red':'blue'}}`}</style>
- custom document
- there are 3 static methods to get the data within pages: 
getStaticProps - fetching data at build time
getServerSideProps - fetching on every request
getStaticPaths - dynamically rendering paths based on the data we are fetching

1 -- easiest way to create nextjs app is by using npx create-next-app
2 -- every page is driven by react component, placed in the 'pages' directory = routes *not for index.js = '/'
if we have index.js within some directories it will create root path for that file
3 -- components are placed within its own directory and can be re-used wherever we need them
4 -- Link component allows to do the client side navigation in browser, pages are loaded via JS not new requests
5 -- by default Next does the code splitting for our application, so JS for the current page is only served from server
and only when we navigate to other page we will serve the JS for the specific page. 
EACH PAGE HAS ITS OWN JS AND ITS SERVED ONLY ONE TIME WE VISIT THE PAGE. in build version it looks at links and
pre-fetches the JS for specific pages

